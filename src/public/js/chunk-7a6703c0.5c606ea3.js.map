{"version":3,"sources":["webpack:///./src/components/BasePanel.vue","webpack:///./src/components/BasePanel.vue?9657","webpack:///./src/components/BaseLabel.vue","webpack:///./src/components/BaseLabel.vue?47fe","webpack:///./src/components/BaseLabel.vue?8e54","webpack:///./src/components/BaseButton.vue","webpack:///./src/components/BaseButton.vue?8163","webpack:///./src/views/courses/ExamCreationPage.vue","webpack:///./src/views/courses/ExamCreationPage.vue?f33e","webpack:///./src/views/courses/ExamCreationPage.vue?2ad0","webpack:///./src/views/courses/ExamCreationPage.vue?1a99"],"names":["class","script","render","emphasis","name","props","type","Boolean","default","disabled","prominent","required","String","for","viewBox","fill","fill-rule","d","clip-rule","course","examName","id","min","max","examHours","placeholder","hour","examMinutes","maxAttempts","weeks","week","examItems","examItem","i","key","removeExamItem","question","answer","addExamItem","saveExam","components","BaseInput","BaseButton","BasePanel","BaseLabel","courseId","data","computed","this","$store","getters","courseByID","examDurationInSeconds","methods","parseAnswer","answerValue","unparsedChoices","split","length","questionType","choices","filter","correctAnswer","map","choice","substring","charAt","push","index","item","newExam","label","random","duration","exams","create","createdExam","commit","dispatch","$router","response","error","__scopeId"],"mappings":"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","file":"js/chunk-7a6703c0.5c606ea3.js","sourcesContent":["<template>\n  <div class=\"bg-gray-100 dark:bg-gray-800 shadow p-6 rounded-lg\">\n    <slot></slot>\n  </div>\n</template>\n","import { render } from \"./BasePanel.vue?vue&type=template&id=61b34d76\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\n  <div\n    class=\"text-xs text-gray-600 dark:text-gray-400 font-semibold mb-1\"\n    :class=\"emphasis ? 'uppercase tracking-wider' : 'capitalize'\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n</script>\n","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n","import { render } from \"./BaseLabel.vue?vue&type=template&id=63ccc911\"\nimport script from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button\n    class=\"transform ease-in-out duration-150 capitalize focus:outline-none appearance-none active:scale-95 text-sm font-medium py-2 px-6 rounded-lg disabled:opacity-50 shadow\"\n    :class=\"\n      prominent\n        ? 'text-white bg-gradient-to-t from-green-600 to-green-500 hover:from-green-700 hover:to-green-600'\n        : 'bg-white dark:bg-gray-200 dark:bg-opacity-5 text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:bg-opacity-30 hover:shadow-md'\n    \"\n    :type=\"type\"\n    :disabled=\"disabled\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseButton',\n  props: {\n    prominent: {\n      type: Boolean,\n      default: false\n    },\n\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n\n    type: {\n      type: String,\n      required: false,\n      default: 'button'\n    }\n  }\n})\n</script>\n","import { render } from \"./BaseButton.vue?vue&type=template&id=3c35fb94\"\nimport script from \"./BaseButton.vue?vue&type=script&lang=js\"\nexport * from \"./BaseButton.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div v-if=\"course\">\n    <BasePanel class=\"overflow-hidden\">\n      <div\n        class=\"-mx-6 -mt-6 p-6 bg-gradient-to-r from-green-600 to-green-400 dark:from-green-700 dark:to-green-500\"\n      >\n        <BaseLabel emphasis class=\"text-green-200 dark:text-green-400\">{{\n          course.name\n        }}</BaseLabel>\n        <div class=\"text-2xl font-bold text-white\">New Exam</div>\n      </div>\n      <div class=\"mt-4 flex divide-x divide-gray-300 dark:divide-gray-700\">\n        <div class=\"pr-6\">\n          <label>\n            <BaseLabel>Name</BaseLabel>\n            <BaseInput v-model=\"examName\" type=\"text\" />\n          </label>\n        </div>\n        <div class=\"px-6\">\n          <label>\n            <BaseLabel>Duration</BaseLabel>\n            <input\n              class=\"input-number\"\n              type=\"number\"\n              id=\"hours\"\n              min=\"0\"\n              max=\"2\"\n              v-model.number=\"examHours\"\n              placeholder=\"0\"\n            />\n            {{ hour }}\n          </label>\n          <label class=\"ml-2\">\n            <input\n              class=\"input-number\"\n              type=\"number\"\n              id=\"minutes\"\n              min=\"0\"\n              max=\"59\"\n              v-model.number=\"examMinutes\"\n              placeholder=\"0\"\n            />\n            min\n          </label>\n        </div>\n        <div class=\"px-6\">\n          <label>\n            <BaseLabel>Attempts</BaseLabel>\n            <input\n              class=\"input-number\"\n              type=\"number\"\n              id=\"minutes\"\n              min=\"1\"\n              max=\"5\"\n              v-model.number=\"maxAttempts\"\n            />\n          </label>\n        </div>\n        <div class=\"pl-6\">\n          <label>\n            <BaseLabel>Week</BaseLabel>\n            <input\n              class=\"input-number\"\n              type=\"number\"\n              id=\"week\"\n              min=\"1\"\n              :max=\"course.weeks\"\n              v-model.number=\"week\"\n            />\n          </label>\n        </div>\n      </div>\n      <div class=\"mt-4\">\n        <div class=\"border-b border-gray-300 dark:border-gray-700\">\n          <BaseLabel>Exam Items</BaseLabel>\n        </div>\n        <div class=\"divide-y divide-gray-300 dark:divide-gray-700\">\n          <div v-for=\"(examItem, i) in examItems\" :key=\"i\" class=\"flex mb-4\">\n            <div class=\"p-3 text-gray-500 font-thin\">\n              {{ i + 1 }}\n            </div>\n            <div class=\"p-3 flex-grow\">\n              <div>\n                <div class=\"flex items-center justify-between\">\n                  <label for=\"question\">\n                    <BaseLabel>Question</BaseLabel>\n                  </label>\n                  <button\n                    class=\"focus:outline-none text-gray-500 dark:hover:text-white mb-1\"\n                    @click=\"removeExamItem(i)\"\n                  >\n                    <!-- Heroicon name: minus-sm -->\n                    <svg\n                      class=\"fill-current w-5 h-5\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        d=\"M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z\"\n                        clip-rule=\"evenodd\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n                <BaseInput\n                  id=\"question\"\n                  class=\"w-full\"\n                  v-model=\"examItem.question\"\n                  type=\"text\"\n                />\n              </div>\n              <div class=\"mt-4\">\n                <label>\n                  <BaseLabel>Answer</BaseLabel>\n                  <BaseInput\n                    class=\"w-full\"\n                    v-model=\"examItem.answer\"\n                    type=\"text\"\n                  />\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div>\n            <BaseButton @click=\"addExamItem\">Add Exam Item</BaseButton>\n          </div>\n          <div class=\"ml-2\">\n            <BaseButton @click=\"saveExam\" prominent>Save Exam</BaseButton>\n          </div>\n        </div>\n      </div>\n    </BasePanel>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport BaseButton from '@/components/BaseButton.vue'\nimport BaseInput from '@/components/BaseInput.vue'\nimport BaseLabel from '@/components/BaseLabel.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport examsService from '@/services/exams'\nimport { ALERT } from '@/store/action-types'\nimport { ADD_EXAM } from '@/store/mutation-types'\nimport { Course, ExamItem, NewExam } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ExamCreationPage',\n  components: { BaseInput, BaseButton, BasePanel, BaseLabel },\n  props: {\n    courseId: {\n      type: String,\n      required: true\n    }\n  },\n  data () {\n    return {\n      examName: '',\n      examHours: 1,\n      examMinutes: 0,\n      maxAttempts: 3,\n      week: 1,\n      examItems: [\n        {\n          question: '',\n          answer: ''\n        }\n      ]\n    }\n  },\n  computed: {\n    hour (): string {\n      return this.examHours === 1 ? 'hour' : 'hours'\n    },\n    course (): Course | undefined {\n      return this.$store.getters.courseByID(this.courseId)\n    },\n    examDurationInSeconds (): number {\n      return this.examHours * 3600 + this.examMinutes * 60\n    }\n  },\n  methods: {\n    /**\n     * Determines question type based on how answer is formatted.\n     * Multiple choices are delimited by commas and answers are denoted by an asterisk at the beginning.\n     * For example, 'foo' is a text type question since there are no delimiters.\n     * Whereas 'foo,*bar,baz' is a multiple choice, and '*foo,*bar,baz' has multiple answers.\n     * @param answer the answer to parse\n     */\n    parseAnswer (question: string, answerValue: string): ExamItem {\n      const unparsedChoices = answerValue.split(',')\n\n      if (unparsedChoices.length === 1) {\n        return {\n          question,\n          questionType: 'text',\n          answer: unparsedChoices,\n          choices: []\n        }\n      }\n\n      const answer = unparsedChoices.filter(this.correctAnswer).map(choice => choice.substring(1))\n      const choices = unparsedChoices.map(choice => this.correctAnswer(choice) ? choice.substring(1) : choice)\n      return {\n        answer,\n        choices,\n        question,\n        questionType: answer.length === 1 ? 'multiple choice' : 'multiple answers'\n      }\n    },\n    correctAnswer (choice: string): boolean {\n      return choice.charAt(0) === '*'\n    },\n    addExamItem (): void {\n      this.examItems.push({\n        question: '',\n        answer: ''\n      })\n    },\n    removeExamItem (index: number): void {\n      this.examItems = this.examItems.filter((item, i) => i !== index)\n    },\n    async saveExam (): Promise<void> {\n      try {\n        const newExam: NewExam = {\n          label: this.examName,\n          random: false,\n          length: this.examItems.length,\n          duration: this.examDurationInSeconds,\n          courseId: this.courseId,\n          maxAttempts: this.maxAttempts,\n          examItems: this.examItems.map(examItem => this.parseAnswer(examItem.question, examItem.answer)),\n          week: this.week\n        }\n        const createdExam = await examsService.create(newExam)\n        this.$store.commit(ADD_EXAM, createdExam)\n        this.$store.dispatch(ALERT, 'Exam successfully created')\n        this.$router.push(`/courses/${this.courseId}`)\n      } catch (error) {\n        this.$store.dispatch(ALERT, error.response.data.error)\n      }\n    }\n  }\n})\n</script>\n\n<style lang=\"postcss\" scoped>\n.input-number {\n  @apply shadow focus:outline-none dark:bg-gray-800 appearance-none rounded-lg px-3 py-2 focus:ring-0 border-gray-300 dark:border-gray-700 focus:border-green-500 dark:focus:border-green-500;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  @apply opacity-100 duration-200 ease-in-out;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  @apply opacity-0;\n}\n</style>\n","\nimport BaseButton from '@/components/BaseButton.vue'\nimport BaseInput from '@/components/BaseInput.vue'\nimport BaseLabel from '@/components/BaseLabel.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport examsService from '@/services/exams'\nimport { ALERT } from '@/store/action-types'\nimport { ADD_EXAM } from '@/store/mutation-types'\nimport { Course, ExamItem, NewExam } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ExamCreationPage',\n  components: { BaseInput, BaseButton, BasePanel, BaseLabel },\n  props: {\n    courseId: {\n      type: String,\n      required: true\n    }\n  },\n  data () {\n    return {\n      examName: '',\n      examHours: 1,\n      examMinutes: 0,\n      maxAttempts: 3,\n      week: 1,\n      examItems: [\n        {\n          question: '',\n          answer: ''\n        }\n      ]\n    }\n  },\n  computed: {\n    hour (): string {\n      return this.examHours === 1 ? 'hour' : 'hours'\n    },\n    course (): Course | undefined {\n      return this.$store.getters.courseByID(this.courseId)\n    },\n    examDurationInSeconds (): number {\n      return this.examHours * 3600 + this.examMinutes * 60\n    }\n  },\n  methods: {\n    /**\n     * Determines question type based on how answer is formatted.\n     * Multiple choices are delimited by commas and answers are denoted by an asterisk at the beginning.\n     * For example, 'foo' is a text type question since there are no delimiters.\n     * Whereas 'foo,*bar,baz' is a multiple choice, and '*foo,*bar,baz' has multiple answers.\n     * @param answer the answer to parse\n     */\n    parseAnswer (question: string, answerValue: string): ExamItem {\n      const unparsedChoices = answerValue.split(',')\n\n      if (unparsedChoices.length === 1) {\n        return {\n          question,\n          questionType: 'text',\n          answer: unparsedChoices,\n          choices: []\n        }\n      }\n\n      const answer = unparsedChoices.filter(this.correctAnswer).map(choice => choice.substring(1))\n      const choices = unparsedChoices.map(choice => this.correctAnswer(choice) ? choice.substring(1) : choice)\n      return {\n        answer,\n        choices,\n        question,\n        questionType: answer.length === 1 ? 'multiple choice' : 'multiple answers'\n      }\n    },\n    correctAnswer (choice: string): boolean {\n      return choice.charAt(0) === '*'\n    },\n    addExamItem (): void {\n      this.examItems.push({\n        question: '',\n        answer: ''\n      })\n    },\n    removeExamItem (index: number): void {\n      this.examItems = this.examItems.filter((item, i) => i !== index)\n    },\n    async saveExam (): Promise<void> {\n      try {\n        const newExam: NewExam = {\n          label: this.examName,\n          random: false,\n          length: this.examItems.length,\n          duration: this.examDurationInSeconds,\n          courseId: this.courseId,\n          maxAttempts: this.maxAttempts,\n          examItems: this.examItems.map(examItem => this.parseAnswer(examItem.question, examItem.answer)),\n          week: this.week\n        }\n        const createdExam = await examsService.create(newExam)\n        this.$store.commit(ADD_EXAM, createdExam)\n        this.$store.dispatch(ALERT, 'Exam successfully created')\n        this.$router.push(`/courses/${this.courseId}`)\n      } catch (error) {\n        this.$store.dispatch(ALERT, error.response.data.error)\n      }\n    }\n  }\n})\n","import { render } from \"./ExamCreationPage.vue?vue&type=template&id=49b7fce2&scoped=true\"\nimport script from \"./ExamCreationPage.vue?vue&type=script&lang=ts\"\nexport * from \"./ExamCreationPage.vue?vue&type=script&lang=ts\"\n\nimport \"./ExamCreationPage.vue?vue&type=style&index=0&id=49b7fce2&lang=postcss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-49b7fce2\"\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ExamCreationPage.vue?vue&type=style&index=0&id=49b7fce2&lang=postcss&scoped=true\""],"sourceRoot":""}