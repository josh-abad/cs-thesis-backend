{"version":3,"sources":["webpack:///./src/components/BasePanel.vue","webpack:///./src/components/BasePanel.vue?9657","webpack:///./src/components/BaseLabel.vue","webpack:///./src/components/BaseLabel.vue?47fe","webpack:///./src/components/BaseLabel.vue?8e54","webpack:///./src/views/courses/ExamCreationPage.vue","webpack:///./src/views/courses/ExamCreationPage.vue?f33e","webpack:///./src/views/courses/ExamCreationPage.vue?2ad0"],"names":["class","script","render","emphasis","name","props","type","Boolean","default","for","xmlns","viewBox","fill","fill-rule","d","clip-rule","course","examName","id","min","max","examHours","placeholder","hour","examMinutes","maxAttempts","weeks","week","examItems","examItem","i","key","removeExamItem","question","answer","addExamItem","saveExam","prominent","components","BaseInput","BaseButton","BasePanel","BaseLabel","data","questionType","choices","questionTypes","text","value","courseId","String","required","computed","this","$store","getters","getCourseByID","examDurationInSeconds","methods","push","index","filter","item","newExam","label","random","length","duration","exams","create","createdExam","commit","dispatch","$router","response","error"],"mappings":"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","file":"js/chunk-054a7d90.4e11c1c3.js","sourcesContent":["<template>\n  <div class=\"bg-gray-100 dark:bg-gray-800 shadow p-6 rounded-lg\">\n    <slot></slot>\n  </div>\n</template>\n","import { render } from \"./BasePanel.vue?vue&type=template&id=61b34d76\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\n  <div\n    class=\"text-xs text-gray-600 dark:text-gray-400 font-semibold mb-1\"\n    :class=\"emphasis ? 'uppercase tracking-wider' : 'capitalize'\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n</script>\n","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n","import { render } from \"./BaseLabel.vue?vue&type=template&id=63ccc911\"\nimport script from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <BasePanel>\n      <div class=\"text-xl\">Create New Exam for {{ course.name }}</div>\n      <div class=\"flex mt-3 divide-x divide-gray-300 dark:divide-gray-700\">\n        <div>\n          <label>\n            <BaseLabel>Name</BaseLabel>\n            <BaseInput v-model=\"examName\" type=\"text\" />\n          </label>\n        </div>\n        <div class=\"ml-6 pl-6\">\n          <label>\n            <BaseLabel>Duration</BaseLabel>\n            <input\n              class=\"dark:bg-gray-800 rounded w-16\"\n              type=\"number\"\n              name=\"\"\n              id=\"hours\"\n              min=\"0\"\n              max=\"2\"\n              v-model.number=\"examHours\"\n              placeholder=\"0\"\n            />\n            {{ hour }}\n          </label>\n          <label>\n            <input\n              class=\"dark:bg-gray-800 rounded ml-3 w-16\"\n              type=\"number\"\n              name=\"\"\n              id=\"minutes\"\n              min=\"0\"\n              max=\"59\"\n              v-model.number=\"examMinutes\"\n              placeholder=\"0\"\n            />\n            min\n          </label>\n        </div>\n        <div class=\"ml-6\">\n          <label>\n            <BaseLabel>Attempts</BaseLabel>\n            <input\n              class=\"dark:bg-gray-800 rounded w-16\"\n              type=\"number\"\n              name=\"\"\n              id=\"minutes\"\n              min=\"1\"\n              max=\"5\"\n              v-model.number=\"maxAttempts\"\n            />\n          </label>\n        </div>\n        <div class=\"ml-6\">\n          <label>\n            <BaseLabel>Week</BaseLabel>\n            <input\n              class=\"dark:bg-gray-800 rounded w-16\"\n              type=\"number\"\n              id=\"week\"\n              min=\"1\"\n              :max=\"course.weeks\"\n              v-model.number=\"week\"\n            />\n          </label>\n        </div>\n      </div>\n      <div class=\"mt-4\">\n        <div class=\"border-b border-gray-300 dark:border-gray-700\">\n          <BaseLabel emphasis>Exam Items</BaseLabel>\n        </div>\n        <div class=\"divide-y divide-gray-300 dark:divide-gray-700\">\n          <div v-for=\"(examItem, i) in examItems\" :key=\"i\" class=\"flex mb-4\">\n            <div class=\"p-3 text-gray-500 font-thin\">\n              {{ i + 1 }}\n            </div>\n            <div class=\"p-3 flex-grow\">\n              <div>\n                <div class=\"flex items-center justify-between\">\n                  <label for=\"question\">\n                    <BaseLabel>Question</BaseLabel>\n                  </label>\n                  <button\n                    class=\"focus:outline-none text-gray-500 dark:hover:text-white mb-1\"\n                    @click=\"removeExamItem(i)\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                      class=\"fill-current w-5 h-5\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                        clip-rule=\"evenodd\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n                <BaseInput\n                  id=\"question\"\n                  class=\"w-full\"\n                  v-model=\"examItem.question\"\n                  type=\"text\"\n                />\n              </div>\n              <div class=\"mt-4\">\n                <label>\n                  <BaseLabel>Answer</BaseLabel>\n                  <BaseInput\n                    class=\"w-full\"\n                    v-model=\"examItem.answer\"\n                    type=\"text\"\n                  />\n                </label>\n              </div>\n            </div>\n            <!-- <div>\n            <label>\n              <div>Question Type</div>\n              <BaseDropdown\n                v-model=\"examItem.questionType\"\n                :options=\"questionTypes\"\n              />\n            </label>\n          </div> -->\n            <!-- <div class=\"mt-3\" v-show=\"examItem.questionType !== 'text'\">\n            <BaseButton @click=\"removeExamItem(i)\">Add choice</BaseButton>\n          </div> -->\n          </div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div>\n            <BaseButton @click=\"addExamItem\">Add Exam Item</BaseButton>\n          </div>\n          <div class=\"ml-2\">\n            <BaseButton @click=\"saveExam\" prominent>Save Exam</BaseButton>\n          </div>\n        </div>\n      </div>\n    </BasePanel>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport BaseButton from '@/components/BaseButton.vue'\nimport BaseInput from '@/components/BaseInput.vue'\nimport BaseLabel from '@/components/BaseLabel.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport examsService from '@/services/exams'\nimport { ALERT } from '@/store/action-types'\nimport { ADD_EXAM } from '@/store/mutation-types'\nimport { Course, NewExam, Option, QuestionType } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  components: { BaseInput, BaseButton, BasePanel, BaseLabel },\n  name: 'ExamCreationPage',\n  data () {\n    return {\n      examName: '',\n      examHours: 1,\n      examMinutes: 0,\n      maxAttempts: 3,\n      week: 1,\n      examItems: [\n        {\n          question: '',\n          questionType: 'text' as QuestionType,\n          // questionType: 'text' as\n          //   | 'text'\n          //   | 'multiple choice'\n          //   | 'multiple answers',\n          answer: '',\n          choices: [] as string[]\n        }\n      ],\n      questionTypes: [\n        {\n          text: 'Text',\n          value: 'text'\n        }\n        // {\n        // text: 'Multiple Choice',\n        // value: 'multiple choice'\n        // },\n        // {\n        // text: 'Multiple Answers',\n        // value: 'multiple answers'\n        // }\n      ] as Option[]\n    }\n  },\n  props: {\n    courseId: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    hour (): string {\n      return this.examHours === 1 ? 'hour' : 'hours'\n    },\n    course (): Course {\n      return this.$store.getters.getCourseByID(this.courseId)\n    },\n    examDurationInSeconds (): number {\n      return this.examHours * 3600 + this.examMinutes * 60\n    }\n  },\n  methods: {\n    addExamItem (): void {\n      this.examItems.push({\n        question: '',\n        questionType: 'text',\n        answer: '',\n        choices: []\n      })\n    },\n    removeExamItem (index: number): void {\n      this.examItems = this.examItems.filter((item, i) => i !== index)\n    },\n    async saveExam (): Promise<void> {\n      try {\n        const newExam: NewExam = {\n          label: this.examName,\n          random: false,\n          length: this.examItems.length,\n          duration: this.examDurationInSeconds,\n          courseId: this.courseId,\n          maxAttempts: this.maxAttempts,\n          examItems: this.examItems,\n          week: this.week\n        }\n        const createdExam = await examsService.create(newExam)\n        this.$store.commit(ADD_EXAM, createdExam)\n        this.$store.dispatch(ALERT, 'Exam successfully created')\n        this.$router.push(`/courses/${this.courseId}`)\n      } catch (error) {\n        this.$store.dispatch(ALERT, error.response.data.error)\n      }\n    }\n  }\n})\n</script>\n","\nimport BaseButton from '@/components/BaseButton.vue'\nimport BaseInput from '@/components/BaseInput.vue'\nimport BaseLabel from '@/components/BaseLabel.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport examsService from '@/services/exams'\nimport { ALERT } from '@/store/action-types'\nimport { ADD_EXAM } from '@/store/mutation-types'\nimport { Course, NewExam, Option, QuestionType } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  components: { BaseInput, BaseButton, BasePanel, BaseLabel },\n  name: 'ExamCreationPage',\n  data () {\n    return {\n      examName: '',\n      examHours: 1,\n      examMinutes: 0,\n      maxAttempts: 3,\n      week: 1,\n      examItems: [\n        {\n          question: '',\n          questionType: 'text' as QuestionType,\n          // questionType: 'text' as\n          //   | 'text'\n          //   | 'multiple choice'\n          //   | 'multiple answers',\n          answer: '',\n          choices: [] as string[]\n        }\n      ],\n      questionTypes: [\n        {\n          text: 'Text',\n          value: 'text'\n        }\n        // {\n        // text: 'Multiple Choice',\n        // value: 'multiple choice'\n        // },\n        // {\n        // text: 'Multiple Answers',\n        // value: 'multiple answers'\n        // }\n      ] as Option[]\n    }\n  },\n  props: {\n    courseId: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    hour (): string {\n      return this.examHours === 1 ? 'hour' : 'hours'\n    },\n    course (): Course {\n      return this.$store.getters.getCourseByID(this.courseId)\n    },\n    examDurationInSeconds (): number {\n      return this.examHours * 3600 + this.examMinutes * 60\n    }\n  },\n  methods: {\n    addExamItem (): void {\n      this.examItems.push({\n        question: '',\n        questionType: 'text',\n        answer: '',\n        choices: []\n      })\n    },\n    removeExamItem (index: number): void {\n      this.examItems = this.examItems.filter((item, i) => i !== index)\n    },\n    async saveExam (): Promise<void> {\n      try {\n        const newExam: NewExam = {\n          label: this.examName,\n          random: false,\n          length: this.examItems.length,\n          duration: this.examDurationInSeconds,\n          courseId: this.courseId,\n          maxAttempts: this.maxAttempts,\n          examItems: this.examItems,\n          week: this.week\n        }\n        const createdExam = await examsService.create(newExam)\n        this.$store.commit(ADD_EXAM, createdExam)\n        this.$store.dispatch(ALERT, 'Exam successfully created')\n        this.$router.push(`/courses/${this.courseId}`)\n      } catch (error) {\n        this.$store.dispatch(ALERT, error.response.data.error)\n      }\n    }\n  }\n})\n","import { render } from \"./ExamCreationPage.vue?vue&type=template&id=e9daa822\"\nimport script from \"./ExamCreationPage.vue?vue&type=script&lang=ts\"\nexport * from \"./ExamCreationPage.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}