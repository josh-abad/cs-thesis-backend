{"version":3,"sources":["webpack:///./src/components/BasePanel.vue","webpack:///./src/components/BasePanel.vue?9657","webpack:///./src/components/BaseLabel.vue","webpack:///./src/components/BaseLabel.vue?47fe","webpack:///./src/components/BaseLabel.vue?8e54","webpack:///./src/views/SettingsPage.vue","webpack:///./src/components/ToggleButton.vue","webpack:///./src/components/ToggleButton.vue?9944","webpack:///./src/components/ToggleButton.vue?ad61","webpack:///./src/views/SettingsPage.vue?fdd6","webpack:///./src/views/SettingsPage.vue?fff4","webpack:///./src/components/BaseButton.vue","webpack:///./src/components/BaseButton.vue?8163","webpack:///./src/components/Accordion.vue","webpack:///./src/components/Accordion.vue?5dbd","webpack:///./src/components/Accordion.vue?b6b5"],"names":["class","script","render","emphasis","name","props","type","Boolean","default","viewBox","fill","fill-rule","d","clip-rule","label","automatic","darkMode","disabled","for","modelValue","value","$emit","$event","target","checked","id","required","String","emits","components","ToggleButton","BasePanel","Accordion","BaseButton","data","computed","theme","this","$store","state","watch","enabled","handleChangeTheme","mounted","methods","commit","prominent","expanded","BaseLabel"],"mappings":"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","file":"js/chunk-1d62a9f4.a0c66578.js","sourcesContent":["<template>\n  <div class=\"bg-gray-100 dark:bg-gray-800 shadow p-6 rounded-lg\">\n    <slot></slot>\n  </div>\n</template>\n","import { render } from \"./BasePanel.vue?vue&type=template&id=61b34d76\"\nconst script = {}\nscript.render = render\n\nexport default script","<template>\n  <div\n    class=\"text-xs text-gray-600 dark:text-gray-400 font-semibold mb-1\"\n    :class=\"emphasis ? 'uppercase tracking-wider' : 'capitalize'\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n</script>\n","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseLabel',\n  props: {\n    emphasis: {\n      type: Boolean,\n      default: false\n    }\n  }\n})\n","import { render } from \"./BaseLabel.vue?vue&type=template&id=63ccc911\"\nimport script from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseLabel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <BasePanel>\n      <div class=\"flex items-center\">\n        <svg\n          class=\"fill-current w-6 h-6\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n        <div class=\"ml-2 font-semibold text-2xl\">Settings</div>\n      </div>\n      <div class=\"mt-4\">\n        <Accordion label=\"User\">\n          <BaseButton>Change Password</BaseButton>\n        </Accordion>\n        <Accordion label=\"Appearance\" class=\"mt-2\">\n          <div>\n            <ToggleButton\n              v-model=\"automatic\"\n              label=\"Automatic (follows system settings)\"\n            />\n          </div>\n          <div>\n            <ToggleButton\n              v-model=\"darkMode\"\n              label=\"Dark Mode\"\n              :disabled=\"automatic\"\n            />\n          </div>\n        </Accordion>\n      </div>\n    </BasePanel>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Accordion from '@/components/Accordion.vue'\nimport BaseButton from '@/components/BaseButton.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport ToggleButton from '@/components/ToggleButton.vue'\nimport { SET_THEME } from '@/store/mutation-types'\nimport { Theme } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'SettingsPage',\n  components: { ToggleButton, BasePanel, Accordion, BaseButton },\n  data () {\n    return {\n      automatic: false,\n      darkMode: false\n    }\n  },\n  computed: {\n    theme (): Theme {\n      return this.$store.state.theme.theme\n    }\n  },\n  watch: {\n    automatic (enabled: boolean) {\n      if (enabled) {\n        this.handleChangeTheme(null)\n      } else {\n        this.handleChangeTheme(this.darkMode ? 'dark' : 'light')\n      }\n    },\n    darkMode (enabled: boolean) {\n      this.handleChangeTheme(enabled ? 'dark' : 'light')\n    }\n  },\n  mounted () {\n    if (this.theme) {\n      this.darkMode = this.theme === 'dark'\n    } else {\n      this.automatic = true\n    }\n  },\n  methods: {\n    handleChangeTheme (theme: Theme) {\n      this.$store.commit(SET_THEME, theme)\n    }\n  }\n})\n</script>\n","<template>\n  <label\n    :for=\"label\"\n    class=\"mt-3 inline-flex items-center\"\n    :class=\"\n      disabled ? 'opacity-50 cursor-default' : 'opacity-100 cursor-pointer'\n    \"\n  >\n    <span class=\"relative\">\n      <span\n        class=\"block w-10 h-6 rounded-full shadow-inner\"\n        :class=\"modelValue ? 'bg-green-500' : 'bg-gray-400 dark:bg-gray-600'\"\n      ></span>\n      <span\n        class=\"absolute block w-4 h-4 mt-1 ml-1 bg-white rounded-full shadow-lg inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-300 ease-in-out\"\n        :class=\"modelValue ? 'transform translate-x-full' : ''\"\n      >\n        <input\n          :value=\"modelValue\"\n          @change=\"$emit('update:modelValue', $event.target.checked)\"\n          :id=\"label\"\n          :disabled=\"disabled\"\n          type=\"checkbox\"\n          class=\"absolute opacity-0 w-0 h-0\"\n        />\n      </span>\n    </span>\n    <span class=\"ml-3 text-sm\">{{ label }}</span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ToggleButton',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    label: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  emits: ['update:modelValue']\n})\n</script>\n","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ToggleButton',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    label: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  emits: ['update:modelValue']\n})\n","import { render } from \"./ToggleButton.vue?vue&type=template&id=0628dc31\"\nimport script from \"./ToggleButton.vue?vue&type=script&lang=ts\"\nexport * from \"./ToggleButton.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport Accordion from '@/components/Accordion.vue'\nimport BaseButton from '@/components/BaseButton.vue'\nimport BasePanel from '@/components/BasePanel.vue'\nimport ToggleButton from '@/components/ToggleButton.vue'\nimport { SET_THEME } from '@/store/mutation-types'\nimport { Theme } from '@/types'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'SettingsPage',\n  components: { ToggleButton, BasePanel, Accordion, BaseButton },\n  data () {\n    return {\n      automatic: false,\n      darkMode: false\n    }\n  },\n  computed: {\n    theme (): Theme {\n      return this.$store.state.theme.theme\n    }\n  },\n  watch: {\n    automatic (enabled: boolean) {\n      if (enabled) {\n        this.handleChangeTheme(null)\n      } else {\n        this.handleChangeTheme(this.darkMode ? 'dark' : 'light')\n      }\n    },\n    darkMode (enabled: boolean) {\n      this.handleChangeTheme(enabled ? 'dark' : 'light')\n    }\n  },\n  mounted () {\n    if (this.theme) {\n      this.darkMode = this.theme === 'dark'\n    } else {\n      this.automatic = true\n    }\n  },\n  methods: {\n    handleChangeTheme (theme: Theme) {\n      this.$store.commit(SET_THEME, theme)\n    }\n  }\n})\n","import { render } from \"./SettingsPage.vue?vue&type=template&id=1f7256e8\"\nimport script from \"./SettingsPage.vue?vue&type=script&lang=ts\"\nexport * from \"./SettingsPage.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button\n    class=\"transform ease-in-out duration-150 capitalize focus:outline-none appearance-none active:scale-95 text-sm font-medium py-2 px-6 rounded-lg disabled:opacity-50 shadow\"\n    :class=\"\n      prominent\n        ? 'text-white bg-gradient-to-t from-green-600 to-green-500 hover:from-green-700 hover:to-green-600'\n        : 'bg-white dark:bg-gray-200 dark:bg-opacity-5 text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:bg-opacity-30 hover:shadow-md'\n    \"\n    :type=\"type\"\n    :disabled=\"disabled\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'BaseButton',\n  props: {\n    prominent: {\n      type: Boolean,\n      default: false\n    },\n\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n\n    type: {\n      type: String,\n      required: false,\n      default: 'button'\n    }\n  }\n})\n</script>\n","import { render } from \"./BaseButton.vue?vue&type=template&id=3c35fb94\"\nimport script from \"./BaseButton.vue?vue&type=script&lang=js\"\nexport * from \"./BaseButton.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div\n      class=\"flex items-center border-b border-gray-300 dark:border-gray-700\"\n    >\n      <div\n        @click=\"expanded = !expanded\"\n        class=\"cursor-pointer dark:text-gray-400 dark:hover:text-white\"\n      >\n        <!-- Heroicon name: chevron-right -->\n        <svg\n          class=\"w-5 h-5 mb-1 transform ease-in-out duration-100\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          :class=\"expanded ? 'rotate-90' : 'rotate-0'\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <BaseLabel class=\"ml-2 mb-0\" emphasis>{{ label }}</BaseLabel>\n    </div>\n    <div\n      class=\"duration-100 ease-in-out transform\"\n      :class=\"\n        expanded\n          ? 'py-3 opacity-100 translate-y-0'\n          : 'py-0 opacity-0 -translate-y-2'\n      \"\n    >\n      <div v-show=\"expanded\">\n        <slot></slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport BaseLabel from './BaseLabel.vue'\n\nexport default defineComponent({\n  name: 'Accordion',\n  components: { BaseLabel },\n  props: {\n    label: {\n      type: String,\n      required: true\n    }\n  },\n  data () {\n    return {\n      expanded: true\n    }\n  }\n})\n</script>\n","\nimport { defineComponent } from 'vue'\nimport BaseLabel from './BaseLabel.vue'\n\nexport default defineComponent({\n  name: 'Accordion',\n  components: { BaseLabel },\n  props: {\n    label: {\n      type: String,\n      required: true\n    }\n  },\n  data () {\n    return {\n      expanded: true\n    }\n  }\n})\n","import { render } from \"./Accordion.vue?vue&type=template&id=f220b5ce\"\nimport script from \"./Accordion.vue?vue&type=script&lang=ts\"\nexport * from \"./Accordion.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}